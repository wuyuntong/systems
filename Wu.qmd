---
title: "lab assignment"
author: "Yuntong Wu"
format: html
editor: visual
---
GitHub link: https://github.com/wuyuntong/systems

```{r warning=FALSE}
here::i_am("systems.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
theme_set(theme_bw())
```
## Question 3
```{r}
sys <- vroom(here("data", "all-systems.csv"))
```

```{r}
sys <- sys |> mutate(`Star Mass` = as.numeric(gsub(",", ".", sys$`Star Mass`)),
                     `RELATIVE RADIUS` = as.numeric(gsub(",", ".", `RELATIVE RADIUS`)),
                     `Star Luminosity` = as.numeric(gsub(",", ".",  `Star Luminosity`)))
```

## Question 4
```{r}
colSums(is.na(sys)) > 0
```
```{r}
sys |> summarise(n_obs = nrow(sys), n_var = ncol(sys), n_missing_star_mass = sum(is.na(sys$`Star Mass`)), n_missing_star_luminosity = sum(is.na(sys$`Star Luminosity`)), n_obs_missing = sum(rowSums(is.na(sys)) > 0)) |> knitr::kable()
```
## Question 5
```{r}
sys |> ggplot(aes(x = `Star Mass`, y = `Star Luminosity`)) +
  geom_point(na.rm = TRUE)
```
## Question 6
```{r}
index = c(which.min(sys$DISTANCE),
          which.max(sys$DISTANCE),
          which.min(sys$`EQUIVALENT TEMPERATURE`),
          which.max(sys$`EQUIVALENT TEMPERATURE`),
          which.min(sys$`Star Mass`),
          which.max(sys$`Star Mass`),
          which.min(sys$`RELATIVE RADIUS`),
          which.max(sys$`RELATIVE RADIUS`),
          which.min(sys$`Star Luminosity`),
          which.max(sys$`Star Luminosity`))

stars <- sys[index,]$star

extreme <- c("min_dist", "max_dis", "min_temp", "max_temp", "min_mass", "max_mass", "min_rad", "max_rad", "min_lum", "max_lum")

m <- data.frame(extreme, index)
knitr::kable(m)

```

## question 8
```{r}
fac <- vroom(here("data", "factions.csv"))
facsys <- vroom(here("data", "Factionsystem.csv"))
```
## question 9
```{r}
facsys |> summarise(n_A = sum(facsys$Faction_key == "A"), n_I = sum(facsys$Faction_key == "I"), n_U = sum(facsys$Faction_key == "U"))
```

## question 10
```{r}
length(setdiff(fac$Faction_key, facsys$Faction_key))
```
## question 11
```{r}
facsys |> group_by(Faction_key) |>
  summarise(n = n()) |>
  left_join(fac, by = "Faction_key") |>
  ggplot(aes(y = `Faction Name`, x = n)) +
  geom_col()
```
## question 12
```{r}
sys |> left_join(facsys, by = "Star_key") |>
  left_join(fac, by = "Faction_key") |>
   subset(!(Faction_key %in% c("A", "I", "U" ))) |>
   ggplot(aes(y = `Faction Name`, x = `DISTANCE`))+
  geom_boxplot()

```

## question 13
```{r}
sys |> left_join(facsys, by = "Star_key") |>
  left_join(fac, by = "Faction_key") |>
   subset(!(Faction_key %in% c("A", "I", "U" ))) |> 
   group_by(Faction_key) |>
  summarise(max_mass_star = star[which.max(`Star Mass`)]) |>
  knitr::kable()
```

## question 14
```{r}
sys |> left_join(facsys, by = "Star_key") |>
  left_join(fac, by = "Faction_key") |>
  mutate(control = (`initial year` <= 2821 & `WHEN ENDED` >= 2821)) |>
  group_by(`Faction Name`) |>
  summarise(active = sum(control) >= 1)
```
## question 16
```{r}
new <- sys |>
  separate(`STELLAR TYPE`, into = c("class", "mag", "lum"), sep = "\\|", remove = TRUE)
```

## question 17

```{r}
new |> ggplot(aes(x = `EQUIVALENT TEMPERATURE`)) +
  geom_histogram(na.rm = TRUE) +
  stat_bin(bins = 20)
```

## question 18
```{r}
new |> ggplot(aes(x = `EQUIVALENT TEMPERATURE`)) +
  geom_histogram(na.rm = TRUE) + 
  facet_wrap(~mag)
```
## question 19
```{r}

```

## question 20
```{r}
new |> ggplot(aes(x = `RELATIVE RADIUS`)) +
  geom_histogram()+
  facet_wrap(~class)
```

## question 21
```{r}
new |> left_join(facsys, by = "Star_key") |>
  na.omit() |>
  ggplot(aes(x = class, fill = Faction_key)) +
  geom_bar(position = "dodge", na.rm = TRUE) 
```

## question 22
```{r}
unique(facsys$Substructure) |> knitr::kable()
```
